// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BoosterBlackListed extends ethereum.Event {
  get params(): BoosterBlackListed__Params {
    return new BoosterBlackListed__Params(this);
  }
}

export class BoosterBlackListed__Params {
  _event: BoosterBlackListed;

  constructor(event: BoosterBlackListed) {
    this._event = event;
  }

  get boosterId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BoosterMinted extends ethereum.Event {
  get params(): BoosterMinted__Params {
    return new BoosterMinted__Params(this);
  }
}

export class BoosterMinted__Params {
  _event: BoosterMinted;

  constructor(event: BoosterMinted) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _type(): string {
    return this._event.parameters[1].value.toString();
  }

  get boosterURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get newItemId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalBoostersOfThisCategory(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BoosterWhiteListed extends ethereum.Event {
  get params(): BoosterWhiteListed__Params {
    return new BoosterWhiteListed__Params(this);
  }
}

export class BoosterWhiteListed__Params {
  _event: BoosterWhiteListed;

  constructor(event: BoosterWhiteListed) {
    this._event = event;
  }

  get boosterId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class baseURIUpdated extends ethereum.Event {
  get params(): baseURIUpdated__Params {
    return new baseURIUpdated__Params(this);
  }
}

export class baseURIUpdated__Params {
  _event: baseURIUpdated;

  constructor(event: baseURIUpdated) {
    this._event = event;
  }

  get baseURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class boosterURIUpdated extends ethereum.Event {
  get params(): boosterURIUpdated__Params {
    return new boosterURIUpdated__Params(this);
  }
}

export class boosterURIUpdated__Params {
  _event: boosterURIUpdated;

  constructor(event: boosterURIUpdated) {
    this._event = event;
  }

  get boosterId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _boosterURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class discountMultiplierUpdated extends ethereum.Event {
  get params(): discountMultiplierUpdated__Params {
    return new discountMultiplierUpdated__Params(this);
  }
}

export class discountMultiplierUpdated__Params {
  _event: discountMultiplierUpdated;

  constructor(event: discountMultiplierUpdated) {
    this._event = event;
  }

  get _type(): string {
    return this._event.parameters[0].value.toString();
  }

  get _platformFeeDiscount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sighPayDiscount_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class newCategoryAdded extends ethereum.Event {
  get params(): newCategoryAdded__Params {
    return new newCategoryAdded__Params(this);
  }
}

export class newCategoryAdded__Params {
  _event: newCategoryAdded;

  constructor(event: newCategoryAdded) {
    this._event = event;
  }

  get _type(): string {
    return this._event.parameters[0].value.toString();
  }

  get _platformFeeDiscount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sighPayDiscount_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SIGHBoosters__getBoosterInfoResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SIGHBoosters__getDiscountRatiosForBoosterResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class SIGHBoosters__getDiscountRatiosForBoosterCategoryResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class SIGHBoosters extends ethereum.SmartContract {
  static bind(address: Address): SIGHBoosters {
    return new SIGHBoosters("SIGHBoosters", address);
  }

  addNewBoosterType(
    _type: string,
    _platformFeeDiscount_: BigInt,
    _sighPayDiscount_: BigInt
  ): boolean {
    let result = super.call(
      "addNewBoosterType",
      "addNewBoosterType(string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromString(_type),
        ethereum.Value.fromUnsignedBigInt(_platformFeeDiscount_),
        ethereum.Value.fromUnsignedBigInt(_sighPayDiscount_)
      ]
    );

    return result[0].toBoolean();
  }

  try_addNewBoosterType(
    _type: string,
    _platformFeeDiscount_: BigInt,
    _sighPayDiscount_: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addNewBoosterType",
      "addNewBoosterType(string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromString(_type),
        ethereum.Value.fromUnsignedBigInt(_platformFeeDiscount_),
        ethereum.Value.fromUnsignedBigInt(_sighPayDiscount_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  createNewBoosters(_type: Array<string>, boosterURI: Array<string>): BigInt {
    let result = super.call(
      "createNewBoosters",
      "createNewBoosters(string[],string[]):(uint256)",
      [
        ethereum.Value.fromStringArray(_type),
        ethereum.Value.fromStringArray(boosterURI)
      ]
    );

    return result[0].toBigInt();
  }

  try_createNewBoosters(
    _type: Array<string>,
    boosterURI: Array<string>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createNewBoosters",
      "createNewBoosters(string[],string[]):(uint256)",
      [
        ethereum.Value.fromStringArray(_type),
        ethereum.Value.fromStringArray(boosterURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createNewSIGHBooster(
    _owner: Address,
    _type: string,
    boosterURI: string,
    _data: Bytes
  ): BigInt {
    let result = super.call(
      "createNewSIGHBooster",
      "createNewSIGHBooster(address,string,string,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_type),
        ethereum.Value.fromString(boosterURI),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBigInt();
  }

  try_createNewSIGHBooster(
    _owner: Address,
    _type: string,
    boosterURI: string,
    _data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createNewSIGHBooster",
      "createNewSIGHBooster(address,string,string,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_type),
        ethereum.Value.fromString(boosterURI),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllBoosterTypes(): Array<string> {
    let result = super.call(
      "getAllBoosterTypes",
      "getAllBoosterTypes():(string[])",
      []
    );

    return result[0].toStringArray();
  }

  try_getAllBoosterTypes(): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getAllBoosterTypes",
      "getAllBoosterTypes():(string[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getApproved(boosterId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(boosterId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBoosterCategory(boosterId: BigInt): string {
    let result = super.call(
      "getBoosterCategory",
      "getBoosterCategory(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );

    return result[0].toString();
  }

  try_getBoosterCategory(boosterId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getBoosterCategory",
      "getBoosterCategory(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getBoosterInfo(boosterId: BigInt): SIGHBoosters__getBoosterInfoResult {
    let result = super.call(
      "getBoosterInfo",
      "getBoosterInfo(uint256):(address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );

    return new SIGHBoosters__getBoosterInfoResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getBoosterInfo(
    boosterId: BigInt
  ): ethereum.CallResult<SIGHBoosters__getBoosterInfoResult> {
    let result = super.tryCall(
      "getBoosterInfo",
      "getBoosterInfo(uint256):(address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SIGHBoosters__getBoosterInfoResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getDiscountRatiosForBooster(
    boosterId: BigInt
  ): SIGHBoosters__getDiscountRatiosForBoosterResult {
    let result = super.call(
      "getDiscountRatiosForBooster",
      "getDiscountRatiosForBooster(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );

    return new SIGHBoosters__getDiscountRatiosForBoosterResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getDiscountRatiosForBooster(
    boosterId: BigInt
  ): ethereum.CallResult<SIGHBoosters__getDiscountRatiosForBoosterResult> {
    let result = super.tryCall(
      "getDiscountRatiosForBooster",
      "getDiscountRatiosForBooster(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SIGHBoosters__getDiscountRatiosForBoosterResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getDiscountRatiosForBoosterCategory(
    _category: string
  ): SIGHBoosters__getDiscountRatiosForBoosterCategoryResult {
    let result = super.call(
      "getDiscountRatiosForBoosterCategory",
      "getDiscountRatiosForBoosterCategory(string):(uint256,uint256)",
      [ethereum.Value.fromString(_category)]
    );

    return new SIGHBoosters__getDiscountRatiosForBoosterCategoryResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getDiscountRatiosForBoosterCategory(
    _category: string
  ): ethereum.CallResult<
    SIGHBoosters__getDiscountRatiosForBoosterCategoryResult
  > {
    let result = super.tryCall(
      "getDiscountRatiosForBoosterCategory",
      "getDiscountRatiosForBoosterCategory(string):(uint256,uint256)",
      [ethereum.Value.fromString(_category)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SIGHBoosters__getDiscountRatiosForBoosterCategoryResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBlacklisted(boosterId: BigInt): boolean {
    let result = super.call("isBlacklisted", "isBlacklisted(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);

    return result[0].toBoolean();
  }

  try_isBlacklisted(boosterId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isBlacklisted",
      "isBlacklisted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isCategorySupported(_category: string): boolean {
    let result = super.call(
      "isCategorySupported",
      "isCategorySupported(string):(bool)",
      [ethereum.Value.fromString(_category)]
    );

    return result[0].toBoolean();
  }

  try_isCategorySupported(_category: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCategorySupported",
      "isCategorySupported(string):(bool)",
      [ethereum.Value.fromString(_category)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidBooster(boosterId: BigInt): boolean {
    let result = super.call(
      "isValidBooster",
      "isValidBooster(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );

    return result[0].toBoolean();
  }

  try_isValidBooster(boosterId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidBooster",
      "isValidBooster(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(boosterId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(boosterId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOfBooster(boosterId: BigInt): Address {
    let result = super.call(
      "ownerOfBooster",
      "ownerOfBooster(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );

    return result[0].toAddress();
  }

  try_ownerOfBooster(boosterId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ownerOfBooster",
      "ownerOfBooster(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(boosterId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(boosterId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(boosterId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(boosterId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalBoostersAvailable(_category: string): BigInt {
    let result = super.call(
      "totalBoostersAvailable",
      "totalBoostersAvailable(string):(uint256)",
      [ethereum.Value.fromString(_category)]
    );

    return result[0].toBigInt();
  }

  try_totalBoostersAvailable(_category: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBoostersAvailable",
      "totalBoostersAvailable(string):(uint256)",
      [ethereum.Value.fromString(_category)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBoostersOwnedOfType(owner: Address, _category: string): BigInt {
    let result = super.call(
      "totalBoostersOwnedOfType",
      "totalBoostersOwnedOfType(address,string):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromString(_category)]
    );

    return result[0].toBigInt();
  }

  try_totalBoostersOwnedOfType(
    owner: Address,
    _category: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBoostersOwnedOfType",
      "totalBoostersOwnedOfType(address,string):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromString(_category)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  updateBoosterURI(boosterId: BigInt, boosterURI: string): boolean {
    let result = super.call(
      "updateBoosterURI",
      "updateBoosterURI(uint256,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(boosterId),
        ethereum.Value.fromString(boosterURI)
      ]
    );

    return result[0].toBoolean();
  }

  try_updateBoosterURI(
    boosterId: BigInt,
    boosterURI: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateBoosterURI",
      "updateBoosterURI(uint256,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(boosterId),
        ethereum.Value.fromString(boosterURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateDiscountMultiplier(
    _type: string,
    _platformFeeDiscount_: BigInt,
    _sighPayDiscount_: BigInt
  ): boolean {
    let result = super.call(
      "updateDiscountMultiplier",
      "updateDiscountMultiplier(string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromString(_type),
        ethereum.Value.fromUnsignedBigInt(_platformFeeDiscount_),
        ethereum.Value.fromUnsignedBigInt(_sighPayDiscount_)
      ]
    );

    return result[0].toBoolean();
  }

  try_updateDiscountMultiplier(
    _type: string,
    _platformFeeDiscount_: BigInt,
    _sighPayDiscount_: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateDiscountMultiplier",
      "updateDiscountMultiplier(string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromString(_type),
        ethereum.Value.fromUnsignedBigInt(_platformFeeDiscount_),
        ethereum.Value.fromUnsignedBigInt(_sighPayDiscount_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _updateBaseURICall extends ethereum.Call {
  get inputs(): _updateBaseURICall__Inputs {
    return new _updateBaseURICall__Inputs(this);
  }

  get outputs(): _updateBaseURICall__Outputs {
    return new _updateBaseURICall__Outputs(this);
  }
}

export class _updateBaseURICall__Inputs {
  _call: _updateBaseURICall;

  constructor(call: _updateBaseURICall) {
    this._call = call;
  }

  get baseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class _updateBaseURICall__Outputs {
  _call: _updateBaseURICall;

  constructor(call: _updateBaseURICall) {
    this._call = call;
  }
}

export class AddNewBoosterTypeCall extends ethereum.Call {
  get inputs(): AddNewBoosterTypeCall__Inputs {
    return new AddNewBoosterTypeCall__Inputs(this);
  }

  get outputs(): AddNewBoosterTypeCall__Outputs {
    return new AddNewBoosterTypeCall__Outputs(this);
  }
}

export class AddNewBoosterTypeCall__Inputs {
  _call: AddNewBoosterTypeCall;

  constructor(call: AddNewBoosterTypeCall) {
    this._call = call;
  }

  get _type(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _platformFeeDiscount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sighPayDiscount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddNewBoosterTypeCall__Outputs {
  _call: AddNewBoosterTypeCall;

  constructor(call: AddNewBoosterTypeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get boosterId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BlackListBoosterCall extends ethereum.Call {
  get inputs(): BlackListBoosterCall__Inputs {
    return new BlackListBoosterCall__Inputs(this);
  }

  get outputs(): BlackListBoosterCall__Outputs {
    return new BlackListBoosterCall__Outputs(this);
  }
}

export class BlackListBoosterCall__Inputs {
  _call: BlackListBoosterCall;

  constructor(call: BlackListBoosterCall) {
    this._call = call;
  }

  get boosterId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BlackListBoosterCall__Outputs {
  _call: BlackListBoosterCall;

  constructor(call: BlackListBoosterCall) {
    this._call = call;
  }
}

export class CreateNewBoostersCall extends ethereum.Call {
  get inputs(): CreateNewBoostersCall__Inputs {
    return new CreateNewBoostersCall__Inputs(this);
  }

  get outputs(): CreateNewBoostersCall__Outputs {
    return new CreateNewBoostersCall__Outputs(this);
  }
}

export class CreateNewBoostersCall__Inputs {
  _call: CreateNewBoostersCall;

  constructor(call: CreateNewBoostersCall) {
    this._call = call;
  }

  get _type(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get boosterURI(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class CreateNewBoostersCall__Outputs {
  _call: CreateNewBoostersCall;

  constructor(call: CreateNewBoostersCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateNewSIGHBoosterCall extends ethereum.Call {
  get inputs(): CreateNewSIGHBoosterCall__Inputs {
    return new CreateNewSIGHBoosterCall__Inputs(this);
  }

  get outputs(): CreateNewSIGHBoosterCall__Outputs {
    return new CreateNewSIGHBoosterCall__Outputs(this);
  }
}

export class CreateNewSIGHBoosterCall__Inputs {
  _call: CreateNewSIGHBoosterCall;

  constructor(call: CreateNewSIGHBoosterCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _type(): string {
    return this._call.inputValues[1].value.toString();
  }

  get boosterURI(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CreateNewSIGHBoosterCall__Outputs {
  _call: CreateNewSIGHBoosterCall;

  constructor(call: CreateNewSIGHBoosterCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get boosterId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get boosterId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get boosterId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBoosterURICall extends ethereum.Call {
  get inputs(): UpdateBoosterURICall__Inputs {
    return new UpdateBoosterURICall__Inputs(this);
  }

  get outputs(): UpdateBoosterURICall__Outputs {
    return new UpdateBoosterURICall__Outputs(this);
  }
}

export class UpdateBoosterURICall__Inputs {
  _call: UpdateBoosterURICall;

  constructor(call: UpdateBoosterURICall) {
    this._call = call;
  }

  get boosterId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get boosterURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateBoosterURICall__Outputs {
  _call: UpdateBoosterURICall;

  constructor(call: UpdateBoosterURICall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateDiscountMultiplierCall extends ethereum.Call {
  get inputs(): UpdateDiscountMultiplierCall__Inputs {
    return new UpdateDiscountMultiplierCall__Inputs(this);
  }

  get outputs(): UpdateDiscountMultiplierCall__Outputs {
    return new UpdateDiscountMultiplierCall__Outputs(this);
  }
}

export class UpdateDiscountMultiplierCall__Inputs {
  _call: UpdateDiscountMultiplierCall;

  constructor(call: UpdateDiscountMultiplierCall) {
    this._call = call;
  }

  get _type(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _platformFeeDiscount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sighPayDiscount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateDiscountMultiplierCall__Outputs {
  _call: UpdateDiscountMultiplierCall;

  constructor(call: UpdateDiscountMultiplierCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WhiteListBoosterCall extends ethereum.Call {
  get inputs(): WhiteListBoosterCall__Inputs {
    return new WhiteListBoosterCall__Inputs(this);
  }

  get outputs(): WhiteListBoosterCall__Outputs {
    return new WhiteListBoosterCall__Outputs(this);
  }
}

export class WhiteListBoosterCall__Inputs {
  _call: WhiteListBoosterCall;

  constructor(call: WhiteListBoosterCall) {
    this._call = call;
  }

  get boosterId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WhiteListBoosterCall__Outputs {
  _call: WhiteListBoosterCall;

  constructor(call: WhiteListBoosterCall) {
    this._call = call;
  }
}
